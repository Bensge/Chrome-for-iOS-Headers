/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_AudioQueueAllocateBuffer.h"

#import "ChromeToDeviceControllerDelegate-Protocol.h"
#import "NotificationObserverDelegate-Protocol.h"
#import "StackViewControllerDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UserFeedbackDataSource-Protocol.h"
#import "WWANStateModelBridge-Protocol.h"

@class BrowserViewController, NSURL, TabModel, UIWindow;

@interface MainController : _AudioQueueAllocateBuffer <UIApplicationDelegate, StackViewControllerDelegate, UserFeedbackDataSource, ChromeToDeviceControllerDelegate, WWANStateModelBridge, NotificationObserverDelegate>
{
    UIWindow *mainWindow_;
    struct scoped_nsobject<HttpLoginDialogControllerFactory> loginDialogFactory_;
    struct scoped_ptr<ios::ChromeMain> chrome_main_;
    struct Profile *mainProfile_;
    BrowserViewController *mainBVC_;
    TabModel *mainTabModel_;
    BrowserViewController *otrBVC_;
    TabModel *otrTabModel_;
    BrowserViewController *activeBVC_;
    NSURL *externalURL_;
    struct scoped_nsobject<SettingsNavigationController> settingsNavigationController_;
    struct scoped_nsobject<StackViewController> stackController_;
    struct scoped_nsobject<ChromeToDeviceController> chromeToDeviceController_;
    int foregroundMemoryWarningCount_;
    struct TimeTicks sessionStartTime_;
    double outOfMemoryResetTime_;
    BOOL dismissingStackView_;
    BOOL switchToMainBVCOnStackViewDismissal_;
    BOOL stackViewIsActive_;
    BOOL shouldOpenNTPTabOnActive_;
    BOOL shouldOpenURLOnActive_;
    struct scoped_ptr<UserActionRateCounter> userActionRateCounter_;
    struct scoped_ptr<WWANStateObserverBridge> wwanStateObserverBridge_;
    BOOL isFirstLaunchAfterUpgrade_;
    struct scoped_ptr<NotificationObserverBridge> observerBridge_;
    struct PrefChangeRegistrar prefChangeRegistrar_;
    struct ObjCPropertyReleaser propertyReleaser_MainController_;
}

+ (id)parseURL:(id)fp8;
- (void)setExternalURL:(id)fp8;
- (id)externalURL;
- (id)activeBVC;
- (void)setOtrTabModel:(id)fp8;
- (void)setOtrBVC:(id)fp8;
- (void)setMainTabModel:(id)fp8;
- (void)setMainBVC:(id)fp8;
- (void)setMainWindow:(id)fp8;
- (id)mainWindow;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setUpForTesting:(id)fp8;
- (id)currentEntrySyncedUserName;
- (BOOL)currentEntryIsIncognito;
- (id)currentEntryScreenshot;
- (id)currentEntryUrl;
- (void)initIsFirstLaunchAfterUpgrade;
- (void)purgeSnapshots;
- (id)liveSessionsForTabModel:(id)fp8;
- (void)userLocalChanged;
- (void)wwanStateChangedTo:(BOOL)fp8;
- (_Bool)mustShowRestoreInfobar;
- (void)postNotificationOnNextRunLoopCycle:(id)fp8;
- (id)openSelectedTabInMainBVC:(id)fp8 transition:(int)fp12;
- (id)openTabForChromeToDeviceJob:(id)fp8;
- (id)openTabForPrintToPhoneJobDownload:(id)fp8;
- (id)openTabForSnapshotUrl:(id)fp8;
- (void)resetOutOfMemoryFlag;
- (id)getSyncedUserName;
- (void)closeSettingsAnimated:(BOOL)fp8 completion:(id)fp(null);
- (void)closeSettings;
- (void)showSyncEncryptionPassphrase;
- (void)showUpdateSignInPage;
- (void)showSignInToChrome;
- (void)showSyncSettings;
- (void)showSettings;
- (void)setUpChromeNetworkStack;
- (void)stopMetrics;
- (void)startMetrics;
- (void)setUpUserActionRateCounter;
- (id)stackViewControllerTransitionToolbarWithWidth:(float)fp8;
- (void)finishDismissingStackView;
- (void)beginDismissingStackViewWithActiveModel:(id)fp8;
- (void)stackViewControllerDismissAnimationDidEnd;
- (void)stackViewControllerDismissAnimationWillStartWithActiveModel:(id)fp8;
- (id)currentTabSwitcherController;
- (void)dismissTabSwitcherWithoutAnimation;
- (BOOL)shouldOpenNTPTabOnLaunch;
- (void)showTabSwitcher;
- (void)tabCountChanged:(id)fp8;
- (void)updateModeToggle;
- (struct Profile *)activeProfile;
- (id)activeTabModel;
- (id)activeViewController;
- (void)displayActiveBVC;
- (void)setActiveBVC:(id)fp8;
- (void)switchGlobalStateToProfile:(struct Profile *)fp8 backupOldState:(BOOL)fp12;
- (id)otrTabModel;
- (id)otrBVC;
- (id)mainTabModel;
- (id)mainBVC;
- (id)bvcForProfile:(struct Profile *)fp8 tabModel:(id)fp12;
- (id)tabModelForProfile:(struct Profile *)fp8;
- (id)registerExperimentalSettingsForFile:(id)fp8;
- (void)registerExperimentalSettings;
- (void)observe:(int)fp8 source:(const struct NotificationSource *)fp12 details:(const struct NotificationDetails *)fp16;
- (void)openUrlFromSettings:(id)fp8;
- (void)openUrl:(id)fp8;
- (void)chromeExecuteCommand:(id)fp8;
- (void)applicationDidReceiveMemoryWarning:(id)fp8;
- (void)application:(id)fp8 didReceiveRemoteNotification:(id)fp12;
- (void)application:(id)fp8 didFailToRegisterForRemoteNotificationsWithError:(id)fp12;
- (void)application:(id)fp8 didRegisterForRemoteNotificationsWithDeviceToken:(id)fp12;
- (void)applicationWillResignActive:(id)fp8;
- (void)applicationDidBecomeActive:(id)fp8;
- (void)applicationWillEnterForeground:(id)fp8;
- (void)applicationWillTerminate:(id)fp8;
- (void)applicationDidEnterBackground:(id)fp8;
- (BOOL)application:(id)fp8 openURL:(id)fp12 sourceApplication:(id)fp16 annotation:(id)fp20;
- (void)switchToNewProfile;
- (void)switchToProfile:(struct Profile *)fp8;
- (void)closeCurrentProfile;
- (BOOL)application:(id)fp8 didFinishLaunchingWithOptions:(id)fp12;
- (void)dealloc;
- (void)awakeFromNib;

@end

