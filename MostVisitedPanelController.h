/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "NewTabPagePanelController.h"

#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "VerticalViewScrollerDelegate-Protocol.h"

@class NSMutableDictionary, ResizingGradientView, UIButton, UITableView, UITableViewCell;

@interface MostVisitedPanelController : NewTabPagePanelController <UITableViewDataSource, UITableViewDelegate, VerticalViewScrollerDelegate>
{
    struct scoped_ptr<MostVisitedCallbackBridge> callbackBridge_;
    // Error parsing type: {CancelableRequestConsumerT<int, 0>="_vptr$CancelableRequestConsumerBase"^^?"pending_requests_"{map<CancelableRequestConsumerTSimple<int>::PendingRequest, int, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >="_M_t"{_Rb_tree<CancelableRequestConsumerTSimple<int>::PendingRequest, std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int>, std::_Select1st<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> >, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >="_M_impl"{_Rb_tree_impl<std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, false>="_M_key_compare"{less<CancelableRequestConsumerTSimple<int>::PendingRequest>=}"_M_header"{_Rb_tree_node_base="_M_color"i"_M_parent"^{_Rb_tree_node_base}"_M_left"^{_Rb_tree_node_base}"_M_right"^{_Rb_tree_node_base}}"_M_node_count"I}}}"current_request_"{PendingRequest="provider"^{CancelableRequestProvider}"handle"i}}, name: topsites_consumer_
    struct vector<history::MostVisitedURL, std::allocator<history::MostVisitedURL>> mostVisitedData_;
    // Error parsing type: ^{TabRestoreService=^^?{Lock={LockImpl={_opaque_pthread_mutex_t=l[40c]}}}{map<int, scoped_refptr<CancelableRequestBase>, std::less<int>, std::allocator<std::pair<const int, scoped_refptr<CancelableRequestBase> > > >={_Rb_tree<int, std::pair<const int, scoped_refptr<CancelableRequestBase> >, std::_Select1st<std::pair<const int, scoped_refptr<CancelableRequestBase> > >, std::less<int>, std::allocator<std::pair<const int, scoped_refptr<CancelableRequestBase> > > >={_Rb_tree_impl<std::less<int>, false>={less<int>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}i^^?^{Profile}{scoped_refptr<SessionBackend>=^{SessionBackend}}{WeakPtrFactory<BaseSessionService>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}^{BaseSessionService}}{vector<SessionCommand *, std::allocator<SessionCommand *> >={_Vector_impl=^^{SessionCommand}^^{SessionCommand}^^{SessionCommand}}}BiB{list<TabRestoreService::Entry *, std::allocator<TabRestoreService::Entry *> >={_List_impl={_List_node_base=^{_List_node_base}^{_List_node_base}}}}iBii{ObserverList<TabRestoreServiceObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<TabRestoreServiceObserver *, std::allocator<TabRestoreServiceObserver *> >={_Vector_impl=^^{TabRestoreServiceObserver}^^{TabRestoreServiceObserver}^^{TabRestoreServiceObserver}}}ii}{set<TabRestoreServiceDelegate *, std::less<TabRestoreServiceDelegate *>, std::allocator<TabRestoreServiceDelegate *> >={_Rb_tree<TabRestoreServiceDelegate *, TabRestoreServiceDelegate *, std::_Identity<TabRestoreServiceDelegate *>, std::less<TabRestoreServiceDelegate *>, std::allocator<TabRestoreServiceDelegate *> >={_Rb_tree_impl<std::less<TabRestoreServiceDelegate *>, false>={less<TabRestoreServiceDelegate *>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{CancelableRequestConsumerT<int, 0>=^^?{map<CancelableRequestConsumerTSimple<int>::PendingRequest, int, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree<CancelableRequestConsumerTSimple<int>::PendingRequest, std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int>, std::_Select1st<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> >, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree_impl<std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, false>={less<CancelableRequestConsumerTSimple<int>::PendingRequest>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{PendingRequest=^{CancelableRequestProvider}i}}{CancelableRequestConsumerT<int, 0>=^^?{map<CancelableRequestConsumerTSimple<int>::PendingRequest, int, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree<CancelableRequestConsumerTSimple<int>::PendingRequest, std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int>, std::_Select1st<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> >, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree_impl<std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, false>={less<CancelableRequestConsumerTSimple<int>::PendingRequest>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{PendingRequest=^{CancelableRequestProvider}i}}{vector<TabRestoreService::Entry *, std::allocator<TabRestoreService::Entry *> >={_Vector_impl=^^{Entry}^^{Entry}^^{Entry}}}^{TimeFactory}}, name: restoreService_
    struct scoped_ptr<most_visited::Bridge> tabRestoreBridge_;
    struct scoped_nsobject<VerticalViewScroller> mostVisitedView_;
    struct scoped_nsobject<UITableViewCell> mostVisitedCell_;
    NSMutableDictionary *compositeCache_;
    UITableViewCell *storedCell_;
    UITableView *table_;
    UIButton *recentButton_;
    ResizingGradientView *topGradientView_;
    ResizingGradientView *bottomGradientView_;
    struct scoped_nsobject<ContextMenuController> contextMenuController_;
    struct scoped_nsobject<NSURL> deletedUrl_;
    struct ScopedCFTypeRef<CGGradient *> gradient_;
    struct ObjCPropertyReleaser propertyReleaser_MostVisitedPanelController_;
}

- (void)setBottomGradientView:(id)fp8;
- (id)bottomGradientView;
- (void)setTopGradientView:(id)fp8;
- (id)topGradientView;
- (void)setTable:(id)fp8;
- (id)table;
- (void)setStoredCell:(id)fp8;
- (id)storedCell;
- (void)setRecentButton:(id)fp8;
- (id)recentButton;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)entryImageAtIndex:(unsigned int)fp8 completion:(id)fp(null);
- (id)entryLabelAtIndex:(unsigned int)fp8;
- (void)loadRecentlyClosed:(unsigned int)fp8;
- (void)tableView:(id)fp8 didSelectRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 willSelectRowAtIndexPath:(id)fp12;
- (float)tableView:(id)fp8 heightForRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 cellForRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 recentiPhoneCellForRowAtIndexPath:(id)fp12;
- (void)setupRecentlyClosed:(id)fp8 withEntryIndex:(unsigned int)fp12;
- (id)tableView:(id)fp8 recentiPadCellForRowAtIndexPath:(id)fp12 cell:(id)fp16;
- (id)tableView:(id)fp8 labelCellForRowAtIndexPath:(id)fp12;
- (id)tableView:(id)fp8 mostVisitedCellForRowAtIndexPath:(id)fp12;
- (int)tableView:(id)fp8 numberOfRowsInSection:(int)fp12;
- (const struct Entry *)entryAtIndex:(unsigned int)fp8;
- (void)updateMostVisitedView;
- (void)hideMostVisitedUndo:(id)fp8;
- (void)showMostVisitedUndoForURL:(id)fp8;
- (id)buildHeaderView;
- (id)contextMenuForMostVisitedAtIndex:(unsigned int)fp8;
- (void)handleMostVisitedLongPress:(id)fp8;
- (BOOL)allowDragAndDropWithinItemAtIndex:(unsigned int)fp8;
- (BOOL)allowDragAndDropWithItemAtIndex:(unsigned int)fp8;
- (void)viewMovedFromIndex:(unsigned int)fp8 insideIndex:(unsigned int)fp12;
- (void)viewMovedFromIndex:(unsigned int)fp8 toIndex:(unsigned int)fp12;
- (void)frameChanged;
- (unsigned int)numberOfElements;
- (id)compositeThumbnail:(id)fp8;
- (void)drawInnerBorderGradientInRect:(struct CGRect)fp8 context:(struct CGContext *)fp24;
- (void)updateView:(id)fp8 forIndex:(unsigned int)fp12;
- (id)newView;
- (void)iPadRecent:(id)fp8;
- (id)loadRecentButton;
- (void)tabRestoreServiceDestroyed;
- (void)onMostVisitedURLsAvailable:(const struct vector<history::MostVisitedURL, std::allocator<history::MostVisitedURL>> *)fp8;
- (void)reload;
- (BOOL)scrollEnabled:(int)fp8;
- (void)buttonDidTap:(id)fp8;
- (int)typeOfRow:(unsigned int)fp8;
- (unsigned int)numberOfRecentRows;
- (void)loadTopSiteData;
- (unsigned int)titleLines;
- (unsigned int)columns:(int)fp8;
- (unsigned int)topMargin:(int)fp8;
- (void)dealloc;
- (id)initWithLoader:(id)fp8 profile:(struct Profile *)fp12 compositeCache:(id)fp16;

@end

