/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_AudioQueueAllocateBuffer.h"

@class PageInfoView, UIButton, UIScrollView, UIView;

@interface PageInfoViewController : _AudioQueueAllocateBuffer
{
    PageInfoView *pageInfoView_;
    UIButton *shieldButton_;
    UIScrollView *scrollView_;
    UIView *containerView_;
    struct CGPoint origin_;
    struct scoped_ptr<PageInfoModel> model_;
    struct scoped_ptr<PageInfoModelObserver> bridge_;
    int certID_;
    float viewWidth_;
    float textWidth_;
    struct ObjCPropertyReleaser propertyReleaser_PageInfoViewController_;
}

- (void)setCertID:(int)fp8;
- (int)certID;
- (void)setContainerView:(id)fp8;
- (id)containerView;
- (void)setScrollView:(id)fp8;
- (id)scrollView;
- (void)setShieldButton:(id)fp8;
- (id)shieldButton;
- (void)setPageInfoView:(id)fp8;
- (id)pageInfoView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (float)addHelpButtonToSubviews:(id)fp8 atOffset:(float)fp12;
- (float)addDescriptionViewForInfo:(const struct SectionInfo *)fp8 toSubviews:(id)fp12 atPoint:(struct CGPoint)fp16;
- (float)addHeadlineViewForInfo:(const struct SectionInfo *)fp8 toSubviews:(id)fp12 atPoint:(struct CGPoint)fp16;
- (void)addImageViewForInfo:(const struct SectionInfo *)fp8 toSubviews:(id)fp12 atOffset:(float)fp16;
- (float)addSeparatorToSubviews:(id)fp8 atOffset:(float)fp12;
- (void)dismiss;
- (void)performLayout;
-     // Error parsing type: @28@0:4^{PageInfoModel=^{PageInfoModelObserver}{vector<PageInfoModel::SectionInfo, std::allocator<PageInfoModel::SectionInfo> >={_Vector_impl=^{SectionInfo}^{SectionInfo}^{SectionInfo}}}{vector<gfx::Image *, std::allocator<gfx::Image *> >={_Vector_impl=^^{Image}^^{Image}^^{Image}}}{CancelableRequestConsumerT<int, 0>=^^?{map<CancelableRequestConsumerTSimple<int>::PendingRequest, int, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree<CancelableRequestConsumerTSimple<int>::PendingRequest, std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int>, std::_Select1st<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> >, std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<int>::PendingRequest, int> > >={_Rb_tree_impl<std::less<CancelableRequestConsumerTSimple<int>::PendingRequest>, false>={less<CancelableRequestConsumerTSimple<int>::PendingRequest>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{PendingRequest=^{CancelableRequestProvider}i}}{basic_string<unsigned short, base::string16_char_traits, std::allocator<unsigned short> >={_Alloc_hider=^S}}}8^{PageInfoModelObserver=^^?}12{CGPoint=ff}16@24, name: initWithModel:bridge:origin:parentView:

@end

