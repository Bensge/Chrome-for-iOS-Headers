/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "NewTabPagePanelController.h"

#import "BookmarkEditViewControllerDelegate-Protocol.h"
#import "BookmarkNavBarDelegate-Protocol.h"
#import "GridButtonDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "VerticalViewScrollerDelegate-Protocol.h"

@class BookmarkNavBar, NSMutableDictionary, ResizingGradientView, VerticalViewScroller;

@interface BookmarkPanelController : NewTabPagePanelController <BookmarkEditViewControllerDelegate, BookmarkNavBarDelegate, GridButtonDelegate, UIGestureRecognizerDelegate, VerticalViewScrollerDelegate>
{
    // Error parsing type: ^{BookmarkModel=^^?^^?{NotificationRegistrar={vector<content::NotificationRegistrar::Record, std::allocator<content::NotificationRegistrar::Record> >={_Vector_impl=^{Record}^{Record}^{Record}}}}^{Profile}BB{BookmarkNode=^^?{basic_string<unsigned short, base::string16_char_traits, std::allocator<unsigned short> >={_Alloc_hider=^S}}^{BookmarkNode}{ScopedVector<BookmarkNode>={vector<BookmarkNode *, std::allocator<BookmarkNode *> >={_Vector_impl=^^{BookmarkNode}^^{BookmarkNode}^^{BookmarkNode}}}}q{GURL={basic_string<char, std::char_traits<char>, std::allocator<char> >={_Alloc_hider=*}}B{Parsed={Component=ii}{Component=ii}{Component=ii}{Component=ii}{Component=ii}{Component=ii}{Component=ii}{Component=ii}^{Parsed}}^{GURL}}i{Time=q}{Time=q}{scoped_ptr<gfx::Image>=^{Image}}iBi}^{BookmarkPermanentNode}^{BookmarkPermanentNode}^{BookmarkPermanentNode}q{ObserverList<BookmarkModelObserver, false>={WeakReferenceOwner={scoped_refptr<base::internal::WeakReference::Flag>=^{Flag}}}{vector<BookmarkModelObserver *, std::allocator<BookmarkModelObserver *> >={_Vector_impl=^^{BookmarkModelObserver}^^{BookmarkModelObserver}^^{BookmarkModelObserver}}}ii}{multiset<BookmarkNode *, BookmarkModel::NodeURLComparator, std::allocator<BookmarkNode *> >={_Rb_tree<BookmarkNode *, BookmarkNode *, std::_Identity<BookmarkNode *>, BookmarkModel::NodeURLComparator, std::allocator<BookmarkNode *> >={_Rb_tree_impl<BookmarkModel::NodeURLComparator, false>={NodeURLComparator=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{Lock={LockImpl={_opaque_pthread_mutex_t=l[40c]}}}{CancelableRequestConsumerTSimple<BookmarkNode *>=^^?{map<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, BookmarkNode *, std::less<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, BookmarkNode *> > >={_Rb_tree<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, std::pair<const CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, BookmarkNode *>, std::_Select1st<std::pair<const CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, BookmarkNode *> >, std::less<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest>, std::allocator<std::pair<const CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest, BookmarkNode *> > >={_Rb_tree_impl<std::less<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest>, false>={less<CancelableRequestConsumerTSimple<BookmarkNode *>::PendingRequest>=}{_Rb_tree_node_base=i^{_Rb_tree_node_base}^{_Rb_tree_node_base}^{_Rb_tree_node_base}}I}}}{PendingRequest=^{CancelableRequestProvider}i}}{scoped_refptr<BookmarkStorage>=^{BookmarkStorage}}{scoped_ptr<BookmarkIndex>=^{BookmarkIndex}}{WaitableEvent={scoped_refptr<base::WaitableEvent::WaitableEventKernel>=^{WaitableEventKernel}}}i{scoped_ptr<BookmarkExpandedStateTracker>=^{BookmarkExpandedStateTracker}}}, name: bookmarks_
    const struct BookmarkNode *currentNode_;
    struct vector<int, std::allocator<int>> visibleIndices_;
    struct scoped_ptr<BookmarkModelBridge> bridge_;
    BookmarkNavBar *bookmarksHeader_;
    VerticalViewScroller *bookmarksView_;
    struct scoped_nsobject<ContextMenuController> contextMenuController_;
    ResizingGradientView *topGradientView_;
    ResizingGradientView *bottomGradientView_;
    NSMutableDictionary *dominantColorCache_;
    struct ObjCPropertyReleaser propertyReleaser_BookmarkPanelController_;
}

- (void)setBottomGradientView:(id)fp8;
- (id)bottomGradientView;
- (void)setTopGradientView:(id)fp8;
- (id)topGradientView;
- (void)setBookmarksView:(id)fp8;
- (id)bookmarksView;
- (void)setBookmarksHeader:(id)fp8;
- (id)bookmarksHeader;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)compositeFaviconImage:(id)fp8 dominantColor:(id)fp12 width:(float)fp16 height:(float)fp20;
- (void)drawBookmarkFold:(struct CGRect)fp8 offset:(float)fp24 context:(struct CGContext *)fp28 color:(id)fp32;
- (void)cancelEditor:(id)fp8;
- (void)bookmarkEditor:(id)fp8 didFinish:(const struct BookmarkNode *)fp12 withTitle:(id)fp16 url:(struct GURL)fp20 folder:(const struct BookmarkNode *)fp100 shouldDelete:(BOOL)fp104;
- (void)setCurrentNode:(const struct BookmarkNode *)fp8 animate:(BOOL)fp12;
- (void)resetVisibleIndices;
- (void)editButtonDidTap;
- (void)bookmarkButtonDidTap:(const struct BookmarkNode *)fp8;
- (id)bookmarkHeaderBackgroundColor;
- (const struct BookmarkNode *)entryAtIndex:(unsigned int)fp8;
- (void)buttonDidTap:(id)fp8;
- (void)editBookmark:(const struct BookmarkNode *)fp8;
- (void)closeButtonDidTap:(id)fp8;
- (id)contextMenuForBookmarkAtIndex:(unsigned int)fp8;
- (void)handleLongPress:(id)fp8;
- (BOOL)gestureRecognizerShouldBegin:(id)fp8;
- (BOOL)allowDragAndDropWithinItemAtIndex:(unsigned int)fp8;
- (BOOL)allowDragAndDropWithItemAtIndex:(unsigned int)fp8;
- (void)updateView:(id)fp8 forIndex:(unsigned int)fp12;
- (void)buildDominantColorOfImage:(id)fp8 forIndex:(unsigned int)fp12;
- (id)imageForBookmarkAtIndex:(unsigned int)fp8 size:(struct CGSize)fp12 closeLocation:(struct CGPoint *)fp20;
- (id)newView;
- (void)viewMovedFromIndex:(unsigned int)fp8 insideIndex:(unsigned int)fp12;
- (void)viewMovedFromIndex:(unsigned int)fp8 toIndex:(unsigned int)fp12;
- (void)frameChanged;
- (unsigned int)numberOfElements;
- (unsigned int)iconsPerRow:(int)fp8;
- (BOOL)isEditing;
- (void)dealloc;
- (id)initWithLoader:(id)fp8 profile:(struct Profile *)fp12 colorCache:(id)fp16;

@end

